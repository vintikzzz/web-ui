{"version":3,"sources":["webpack:///../mediaelement/build/lang/ru.js","webpack:///../platform-sdk/src/sdk/torrent.js","webpack:///../platform-sdk/proto/download-progress/download-progress_pb.js","webpack:///../platform-sdk/proto/magnet2torrent/magnet2torrent_pb_service.js","webpack:///../platform-sdk/src/sdk/loader/torrent/resource.js","webpack:///../platform-sdk/src/sdk/loader.js","webpack:///../platform-sdk/proto/magnet2torrent/magnet2torrent_pb.js","webpack:///../platform-sdk/proto/abuse-store/abuse-store_pb.js","webpack:///../platform-sdk/proto/download-progress/download-progress_pb_service.js","webpack:///../platform-sdk/proto/torrent-web-seeder/torrent-web-seeder_pb_service.js","webpack:///../platform-sdk/proto/torrent-store/torrent-store_pb_service.js","webpack:///../platform-sdk/src/sdk/process.js","webpack:///../platform-sdk/src/sdk/magnet.js","webpack:///../platform-sdk/src/sdk/abuse.js","webpack:///../platform-sdk/src/sdk/seeder/stats.js","webpack:///../platform-sdk/src/sdk/seeder/downloadProgress.js","webpack:///../platform-sdk/src/sdk/seeder.js","webpack:///../platform-sdk/src/sdk/tracker.js","webpack:///../platform-sdk/src/sdk/util.js","webpack:///../platform-sdk/src/sdk/ext.js","webpack:///../platform-sdk/src/index.js","webpack:///../platform-sdk/proto/torrent-store/torrent-store_pb.js","webpack:///../platform-sdk/proto/abuse-store/abuse-store_pb_service.js","webpack:///../mediaelement/full.js","webpack:///../platform-sdk/proto/torrent-web-seeder/torrent-web-seeder_pb.js"],"names":["exports","undefined","ru","mejs","i18n","debug","require","params","self","fromUrl","url","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","onreadystatechange","async","this","readyState","DONE","ab","Uint8Array","response","buffer","Buffer","byteLength","view","i","length","parseTorrent","open","responseType","send","pull","infoHash","metadata","Object","assign","apiUrl","endpoints","torrent","request","PullRequest","setInfohash","process","grpc","client","TorrentStore","Pull","host","grpcDebug","message","from","res","Code","PermissionDenied","OK","push","expire","PushRequest","setTorrent","toTorrentFile","Push","NotFound","touch","TouchRequest","Touch","jspb","goog","proto","exportSymbol","StatRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","StatReply","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","status","getFieldWithDefault","downloaded","rate","value","readEnum","setStatus","readInt64","setDownloaded","setRate","setLength","f","getStatus","writeEnum","getDownloaded","writeInt64","getRate","getLength","Status","NOT_STARTED","PENDING","ACTIVE","FAILED","setProto3EnumField","setProto3IntField","object","extend","proto_magnet2torrent_magnet2torrent_pb","Magnet2Torrent","serviceName","Magnet2TorrentClient","serviceHost","options","methodName","service","requestStream","responseStream","requestType","Magnet2TorrentRequest","Magnet2TorrentReply","magnet2Torrent","requestMessage","callback","arguments","unary","transport","onEnd","err","Error","statusMessage","code","trailers","cancel","close","Content","constructor","path","name","type","sdk","seeder","isDir","util","getMediaType","getMimeType","getStreamUrl","getDeliveryType","streamUrl","s","c","segmentUrl","File","super","Dir","content","Resource","id","charAt","toMagnetURI","addBranch","tree","parts","file","part","shift","join","files","pathParts","split","keys","dirname","replace","dir","p","filename","isFile","ls","pop","sort","a","b","localeCompare","newResource","get","source","loadTorrentObject","loadTorrentFile","loadMagnet","loadTorrentUrl","pushTorrent","newTorrentResource","e","match","ext","size","fileToArray","db","pullTorrent","pieces","magnet","fetchTorrent","FileReader","arr","target","result","readAsArrayBuffer","readString","setMagnet","getMagnet","writeString","setProto3StringField","getTorrent_asB64","readBytes","getTorrent_asU8","writeBytes","getTorrent","bytesAsB64","bytesAsU8","setProto3BytesField","PushReply","CheckRequest","CheckReply","noticeId","infohash","work","startedAt","email","description","subject","cause","setNoticeId","setFilename","setWork","setStartedAt","setEmail","setDescription","setSubject","setCause","setSource","getNoticeId","getInfohash","getFilename","getWork","getStartedAt","getEmail","getDescription","getSubject","getCause","getSource","Cause","ILLEGAL_CONTENT","MALWARE","APP_ERROR","QUESTION","Source","MAIL","FORM","exists","getBooleanFieldWithDefault","readBool","setExists","getExists","writeBool","setProto3BooleanField","proto_download_progress_download_progress_pb","DownloadProgress","DownloadProgressClient","Stat","StatStream","stat","statStream","listeners","data","end","invoke","onMessage","responseMessage","forEach","handler","details","on","proto_torrent_web_seeder_torrent_web_seeder_pb","TorrentWebSeeder","TorrentWebSeederClient","Files","FilesRequest","FilesReply","proto_torrent_store_torrent_store_pb","TorrentStoreClient","PullReply","TouchReply","getToken","apiKey","retryCount","Unknown","Unavailable","retryInterval","retryLimit","setTimeout","start","Metadata","finishSend","WebsocketTransport","abuse","AbuseStore","Stats","closed","setPath","statuses","invert","map","statusName","piecesList","m","position","complete","priority","JSON","parse","stringify","st","Url","md5","WebSeeder","addDownloadId","Date","now","toString","context","pathname","encodeURIComponent","set","query","makeQuery","subdomains","cacheUrl","cached","isCached","pool","pools","transcoder","cache","subdomainUrl","primaryHost","completedPieces","cdnUrl","urlPostProcess","segment","error","pieceUrl","mediaInfo","throttledCompletedPieces","openSubtitles","downloadUrl","download","cdn","fileName","dpUrl","statUrl","dpStatUrl","downloadProgress","zipUrl","protocol","hostname","stats","retryFetch","href","fetch","retries","retryDelay","attempt","Math","pow","retryOn","cleanExt","toLowerCase","cleanPath","throttledFuncs","token","extname","includes","mime","getType","getSubtitleSrcLang","baseName","basename","ISO6391","getAllCodes","endsWith","getSubtitleLang","getLang","getName","nativeName","getNativeName","cloneUrl","vttUrl","primaryUrl","completedPiecesUrl","tcUrl","transcodeDoneMarkerUrl","multibitrateDoneMarkerUrl","transcodeIndexUrl","multibitrateIndexUrl","hlsUrl","trcUrl","mtrcUrl","vodUrl","viUrl","deliveryType","vod","multibitrate","throttledMultibitrateDoneMarker","throttledTranscodeDoneMarker","baseStreamUrl","mediaType","text","buf","arrayBuffer","byteArr","hex","Array","call","x","slice","json","subtitlesUrl","k","format","src","sUrl","u","subdomainsUrl","rr","isCDNAllowed","cdnPathSuffixes","func","interval","key","throttle","bind","trailing","tf","throttled","done","transcodeIndexExists","transcodeDoneMarker","multibitrateDoneMarker","multibitrateIndexExists","usedSubdomains","sub","filter","console","log","pathParse","extUrl","base","btoa","streamSubtitleUrl","defaultParams","tokenRenewInterval","tokenUrl","t","tracker","loader","checkApi","load","loadById","readInt32","setExpire","getExpire","writeInt32","proto_abuse_store_abuse_store_pb","AbuseStoreClient","Check","check","module","repeatedFields_","Piece","getPath","total","completed","peers","toObjectList","getPiecesList","seeders","leechers","setTotal","setCompleted","setPeers","readMessage","addPieces","setSeeders","setLeechers","getTotal","getCompleted","getPeers","writeRepeatedMessage","getSeeders","getLeechers","INITIALIZATION","SEEDING","IDLE","TERMINATED","WAITING_FOR_PEERS","RESTORING","BACKINGUP","getRepeatedWrapperField","setPiecesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearPiecesList","setPosition","setComplete","setPriority","getPosition","getComplete","getPriority","Priority","NONE","NORMAL","HIGH","READAHEAD","NEXT","NOW","filesList","getFilesList","addFiles","setFilesList","clearFilesList"],"mappings":"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","file":"async_main_493df0b3.c8a5d568b3002b296cb0.bundle.js","sourcesContent":["'use strict';/*!\n * This is a `i18n` language object.\n *\n * Russian\n *\n * @author\n *   Jalios (Twitter: @Jalios)\n *   Sascha Greuel (Twitter: @SoftCreatR)\n *\n * @see core/i18n.js\n */\n(function (exports) {\n\tif (exports.ru === undefined) {\n\t\texports.ru = {\n\t\t\t'mejs.plural-form': 7,\t\t\t\n\t\t\t'mejs.download-file': 'Скачать файл',\t\t\t\n\t\t\t'mejs.install-flash': 'Flash player в вашем браузере не установлен или отключен. Пожалуйста включите ваш Flash player или скачайте последнюю версию с https://get.adobe.com/flashplayer/',\t\t\t\n\t\t\t'mejs.fullscreen': 'Полноэкранный режим',\t\t\t\n\t\t\t'mejs.play': 'Воспроизвести',\n\t\t\t'mejs.pause': 'Пауза',\t\t\t\n\t\t\t'mejs.time-slider': 'Слайдер времени',\n\t\t\t'mejs.time-help-text': 'Используйте Левую/Правую клавиши со стрелками, чтобы продвинуться на одну секунду, клавиши со стрелками Вверх/Вниз, чтобы продвинуться на десять секунд.',\n\t\t\t'mejs.live-broadcast' : 'Прямая трансляция',\t\t\t\n\t\t\t'mejs.volume-help-text': 'Используйте клавиши со стрелками Вверх/Вниз, чтобы увеличить или уменьшить громкость.',\n\t\t\t'mejs.unmute': 'Включить звук',\n\t\t\t'mejs.mute': 'Отключить звук',\n\t\t\t'mejs.volume-slider': 'Слайдер громкости',\t\t\t\n\t\t\t'mejs.video-player': 'Видеоплеер',\n\t\t\t'mejs.audio-player': 'Аудиоплеер',\t\t\t\n\t\t\t'mejs.captions-subtitles': 'Титры/Субтитры',\n\t\t\t'mejs.captions-chapters': 'Главы',\n\t\t\t'mejs.none': 'Нет',\n\t\t\t'mejs.afrikaans': 'Африканский',\n\t\t\t'mejs.albanian': 'Албанский',\n\t\t\t'mejs.arabic': 'Арабский',\n\t\t\t'mejs.belarusian': 'Белорусский',\n\t\t\t'mejs.bulgarian': 'Болгарский',\n\t\t\t'mejs.catalan': 'Каталонский',\n\t\t\t'mejs.chinese': 'Китайский',\n\t\t\t'mejs.chinese-simplified': 'Китайский (упрощенный)',\n\t\t\t'mejs.chinese-traditional': 'Chinese (традиционный)',\n\t\t\t'mejs.croatian': 'Хорватский',\n\t\t\t'mejs.czech': 'Чешский',\n\t\t\t'mejs.danish': 'Датский',\n\t\t\t'mejs.dutch': 'Голландский',\n\t\t\t'mejs.english': 'Английский',\n\t\t\t'mejs.estonian': 'Эстонский',\n\t\t\t'mejs.filipino': 'Филиппинский',\n\t\t\t'mejs.finnish': 'Финский',\n\t\t\t'mejs.french': 'Французский',\n\t\t\t'mejs.galician': 'Галисийский',\n\t\t\t'mejs.german': 'Немецкий',\n\t\t\t'mejs.greek': 'Греческий',\n\t\t\t'mejs.haitian-creole': 'Гаитянский креольский',\n\t\t\t'mejs.hebrew': 'Иврит',\n\t\t\t'mejs.hindi': 'Хинди',\n\t\t\t'mejs.hungarian': 'Венгерский',\n\t\t\t'mejs.icelandic': 'Исландский',\n\t\t\t'mejs.indonesian': 'Индонезийский',\n\t\t\t'mejs.irish': 'Ирландский',\n\t\t\t'mejs.italian': 'Итальянский',\n\t\t\t'mejs.japanese': 'Японский',\n\t\t\t'mejs.korean': 'Корейский',\n\t\t\t'mejs.latvian': 'Латышский',\n\t\t\t'mejs.lithuanian': 'Литовский',\n\t\t\t'mejs.macedonian': 'Македонский',\n\t\t\t'mejs.malay': 'Малайский',\n\t\t\t'mejs.maltese': 'Мальтийский',\n\t\t\t'mejs.norwegian': 'Норвежский',\n\t\t\t'mejs.persian': 'Персидский',\n\t\t\t'mejs.polish': 'Польский',\n\t\t\t'mejs.portuguese': 'Португальский',\n\t\t\t'mejs.romanian': 'Румынский',\n\t\t\t'mejs.russian': 'Русский',\n\t\t\t'mejs.serbian': 'Сербский',\n\t\t\t'mejs.slovak': 'Словацкий',\n\t\t\t'mejs.slovenian': 'Словенский',\n\t\t\t'mejs.spanish': 'Испанский',\n\t\t\t'mejs.swahili': 'Суахили',\n\t\t\t'mejs.swedish': 'Шведский',\n\t\t\t'mejs.tagalog': 'Тагальский',\n\t\t\t'mejs.thai': 'Тайский',\n\t\t\t'mejs.turkish': 'Турецкий',\n\t\t\t'mejs.ukrainian': 'Украинский',\n\t\t\t'mejs.vietnamese': 'Вьетнамский',\n\t\t\t'mejs.welsh': 'Валлийский',\n\t\t\t'mejs.yiddish': 'Идиш'\n\t\t};\n\t}\n})(mejs.i18n);\n","import {TorrentStore} from '../../proto/torrent-store/torrent-store_pb_service';\nimport {PullRequest, PushRequest, TouchRequest} from '../../proto/torrent-store/torrent-store_pb';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport process from './process';\nimport parseTorrent from 'parse-torrent';\nconst debug = require('debug')('webtor:sdk:torrent');\n\nexport default function(params = {}) {\n    const self = {params};\n    return {\n        fromUrl(url) {\n            debug('fetch torrent from url=%s', url);\n            return new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.addEventListener('error', reject);\n                xhr.onreadystatechange = async function() {\n                    if (this.readyState == XMLHttpRequest.DONE) {\n                        const ab = new Uint8Array(this.response);\n                        const buffer = new Buffer(ab.byteLength);\n                        const view = new Uint8Array(ab);\n                        for (let i = 0; i < buffer.length; ++i) {\n                            buffer[i] = view[i];\n                        }\n                        resolve(parseTorrent(buffer));\n                    }\n                };\n                xhr.open('GET', url);\n                xhr.responseType = 'arraybuffer';\n                xhr.send();\n            });\n        },\n        pull(infoHash, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = params.apiUrl + params.endpoints.torrent;\n            debug('pull torrent infoHash=%s url=%s metadata=%o', infoHash, url, metadata);\n            const request = new PullRequest();\n            request.setInfohash(infoHash);\n            const client = () => grpc.client(TorrentStore.Pull, {\n                host:  url,\n                // transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            const onMessage = (message, resolve, reject) => {\n                if (message.torrent == '') {\n                    return reject('no torrent');\n                }\n                let torrent = Buffer.from(message.torrent, 'base64');\n                torrent = parseTorrent(torrent);\n                debug('and finally torrent=%o', torrent);\n                resolve(torrent);\n            }\n            const onEnd = (res, resolve, reject) => {\n                if (res == grpc.Code.PermissionDenied) {\n                    reject('abused');\n                } else if (res !== grpc.Code.OK) {\n                    reject('failed to pull torrent code=' + res);\n                }\n            }\n            return process(client, request, onMessage, onEnd, metadata, params);\n        },\n        push(torrent, expire, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = params.apiUrl + params.endpoints.torrent;\n            debug('push torrent url=%s metadata=%o', url, metadata);\n            const request = new PushRequest();\n            request.setTorrent(parseTorrent.toTorrentFile(torrent));\n            const client = () => grpc.client(TorrentStore.Push, {\n                host:  url,\n                // transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            const onEnd = (res, resolve, reject) => {\n                if (res === grpc.Code.OK) {\n                    debug('torrent stored');\n                    resolve();\n                } else if (res === grpc.Code.NotFound) {\n                    reject('not found');\n                } else if (res === grpc.Code.PermissionDenied) {\n                    reject('abused');\n                } else {\n                    reject('failed to push torrent code=' + res);\n                }\n\n            }\n            return process(client, request, null, onEnd, metadata, params);\n        },\n        touch(torrent, expire, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = params.apiUrl + params.endpoints.torrent;\n            debug('touch torrent url=%s metadata=%o', url, metadata);\n            const request = new TouchRequest();\n            request.setInfohash(torrent.infoHash);\n            const client = () => grpc.client(TorrentStore.Touch, {\n                host: url,\n                // transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            const onEnd = (res, resolve, reject) => {\n                if (res === grpc.Code.OK) {\n                    debug('torrent touched');\n                    resolve();\n                } else if (res === grpc.Code.PermissionDenied) {\n                    reject('abused');\n                } else if (res === grpc.Code.NotFound) {\n                    reject('not found');\n                } else {\n                    reject('failed to touch torrent code=' + res);\n                }\n            }\n            return process(client, request, null, onEnd, metadata, params);\n        },\n    };\n}","// source: proto/download-progress/download-progress.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar proto = {};\n\ngoog.exportSymbol('StatReply', null, proto);\ngoog.exportSymbol('StatReply.Status', null, proto);\ngoog.exportSymbol('StatRequest', null, proto);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StatRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.StatRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.StatRequest.displayName = 'proto.StatRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StatReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.StatReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.StatReply.displayName = 'proto.StatReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StatRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.StatRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StatRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StatRequest}\n */\nproto.StatRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StatRequest;\n  return proto.StatRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StatRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StatRequest}\n */\nproto.StatRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StatRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StatRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StatRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StatReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.StatReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StatReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    downloaded: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    rate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    length: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StatReply}\n */\nproto.StatReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StatReply;\n  return proto.StatReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StatReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StatReply}\n */\nproto.StatReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.StatReply.Status} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDownloaded(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRate(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLength(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StatReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StatReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StatReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getDownloaded();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getRate();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getLength();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.StatReply.Status = {\n  NOT_STARTED: 0,\n  PENDING: 1,\n  ACTIVE: 2,\n  DONE: 3,\n  FAILED: 4\n};\n\n/**\n * optional Status status = 1;\n * @return {!proto.StatReply.Status}\n */\nproto.StatReply.prototype.getStatus = function() {\n  return /** @type {!proto.StatReply.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.StatReply.Status} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional int64 downloaded = 2;\n * @return {number}\n */\nproto.StatReply.prototype.getDownloaded = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setDownloaded = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 rate = 3;\n * @return {number}\n */\nproto.StatReply.prototype.getRate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setRate = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 length = 4;\n * @return {number}\n */\nproto.StatReply.prototype.getLength = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setLength = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// package: \n// file: proto/magnet2torrent/magnet2torrent.proto\n\nvar proto_magnet2torrent_magnet2torrent_pb = require(\"../../proto/magnet2torrent/magnet2torrent_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Magnet2Torrent = (function () {\n  function Magnet2Torrent() {}\n  Magnet2Torrent.serviceName = \"Magnet2Torrent\";\n  return Magnet2Torrent;\n}());\n\nMagnet2Torrent.Magnet2Torrent = {\n  methodName: \"Magnet2Torrent\",\n  service: Magnet2Torrent,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_magnet2torrent_magnet2torrent_pb.Magnet2TorrentRequest,\n  responseType: proto_magnet2torrent_magnet2torrent_pb.Magnet2TorrentReply\n};\n\nexports.Magnet2Torrent = Magnet2Torrent;\n\nfunction Magnet2TorrentClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nMagnet2TorrentClient.prototype.magnet2Torrent = function magnet2Torrent(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Magnet2Torrent.Magnet2Torrent, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.Magnet2TorrentClient = Magnet2TorrentClient;\n\n","import parseTorrent from 'parse-torrent';\nclass Content {\n    constructor({path, name, type}, sdk, seeder) {\n        this.path   = path;\n        this.name   = name;\n        this.type   = type;\n        this.sdk    = sdk;\n        this.seeder = seeder;\n    }\n    get isFile() {\n        return this.type == 'file';\n    }\n    get isDir() {\n        return this.type == 'dir';\n    }\n    get mediaType() {\n        if (this.isDir) return null;\n        return this.sdk.util.getMediaType(this.name);\n    }\n    async getMimeType() {\n        if (this.isDir) return null;\n        return this.sdk.util.getMimeType(await this.getStreamUrl());\n    }\n    async deliveryType() {\n        if (this.isDir) return null;\n        return this.sdk.util.getDeliveryType(this.name);\n    }\n    async getStreamUrl() {\n        if (this.isDir) return null;\n        return await this.seeder.streamUrl(this.path);\n    }\n    async getSegmentUrl(s, c) {\n        if (this.isDir) return null;\n        return await this.seeder.segmentUrl(this.path, s, c);\n    }\n}\nclass File extends Content {\n    constructor(i, sdk, seeder) {\n        super({\n            path: '/' + i.path,\n            name: i.name,\n            type: 'file',\n        }, sdk, seeder);\n        this.length = i.length;\n    }\n}\nclass Dir extends Content {\n    constructor(path, name, sdk, seeder) {\n        super({\n            path,\n            name,\n            type: 'dir',\n        }, sdk, seeder);\n        this.content = {};\n    }\n}\nclass Resource {\n    type = 'torrent';\n    constructor(torrent, sdk, seeder) {\n        this.id = torrent.infoHash;\n        this.torrent = torrent;\n        this.sdk = sdk;\n        this.seeder = seeder;\n    }\n    get title() {\n        return this.torrent.name;\n    }\n    get shortType() {\n        return this.type.charAt(0);\n    }\n    get magnetUri() {\n        return parseTorrent.toMagnetURI(this.torrent);\n    }\n    addBranch(tree, parts, file, path) {\n        if (parts.length == 0) return new File(file, this.sdk, this.seeder);\n        const part = parts.shift();\n        path.push(part);\n        if (parts.length > 0) {\n            if (tree[part] == undefined) {\n                tree[part] = new Dir('/' + path.join('/'), part, this.sdk, this.seeder);\n            }\n            tree[part].content = this.addBranch(tree[part].content, parts, file, path); \n        } else {\n            tree[part] = new File(file, this.sdk, this.seeder);\n        }\n        return tree;\n    }\n    get tree() {\n        let tree = {};\n        for (let file of this.torrent.files) {\n            const pathParts = file.path.split('/');\n            tree = this.addBranch(tree, pathParts, file, []);\n        }\n        return tree;\n    }\n    get root() {\n        return '/' + Object.keys(this.tree)[0];\n    }\n    dirname(path) {\n        path = path.replace(/^\\//, '').replace(/\\/$/, '');\n        path = path.split('/');\n        let tree = this.tree;\n        let dir = [];\n        while (true) {\n            const p = path.shift(path);\n            if (tree[p] && tree[p].isDir) {\n                dir.push(p);\n                tree = tree[p].content;\n            } else {\n                break;\n            }\n        }\n        return '/' + dir.join('/');\n    }\n    filename(path) {\n        path = path.replace(/^\\//, '').replace(/\\/$/, '');\n        path = path.split('/');\n        let tree = this.tree;\n        while (true) {\n            const p = path.shift(path);\n            if (tree[p]) {\n                tree = tree[p];\n            } else {\n                break;\n            }\n        }\n        if (tree.isFile && tree.isFile) {\n            return tree.name;\n        }\n        return null\n    }\n    ls(path) {\n        path = path.replace(/^\\//, '').replace(/\\/$/, '');\n        if (!path) {\n            path = [];\n        } else {\n            path = path.split('/');\n        }\n        let c = this.tree;\n        for (let p of path) {\n            c = c[p].content;\n        }\n        let res = [];\n        for (let i in c) {\n            res.push(c[i]);\n        }\n        if (path.length > 1) {\n            path.pop();\n            res.push(new Dir(\n                path.join('/'),\n                '..',\n            ));\n        }\n        res = res.sort((a, b) => a.name.localeCompare(b.name));\n        return res;\n    }\n}\nexport default function newResource(torrent, sdk) {\n\n    const seeder = sdk.seeder.get(torrent.infoHash);\n    return new Resource(torrent, sdk, seeder);\n}","import parseTorrent from 'parse-torrent';\nimport newTorrentResource from './loader/torrent/resource';\nconst debug = require('debug')('webtor:sdk:loader');\nexport default function(params, sdk) {\n    const self = {params, sdk};\n    return {\n        async load(source, metadata, params = {}) {\n            debug('loading source=%o', source);\n\n            params = Object.assign(self.params, params);\n            let torrent = false;\n            if (torrent == false) torrent = await this.loadTorrentObject(source, metadata, params);\n            if (torrent == false) torrent = await this.loadTorrentFile(source, metadata, params);\n            if (torrent == false) torrent = await this.loadMagnet(source, metadata, params);\n            if (torrent == false) torrent = await this.loadTorrentUrl(source, metadata, params);\n            if (torrent != false) await this.pushTorrent(torrent, metadata, params);\n            if (torrent == false) throw 'failed to load resource';\n            return newTorrentResource(torrent, sdk);\n        },\n        async loadById(type, id, metadata, params = {}) {\n            debug('loading type=%o id=%o', type, id);\n            params = Object.assign(self.params, params);\n            if (type == 'torrent' || type == 't') {\n                let torrent = false;\n                if (torrent == false) torrent = await this.loadMagnet(id, metadata, params);\n                if (torrent != false) await this.pushTorrent(torrent, metadata, params);\n                return newTorrentResource(torrent, sdk);\n            }\n        },\n        async pushTorrent(torrent, metadata, params = {}) {\n            const expire = 60 * 60 * 24 * 30; // 1 month\n            params = Object.assign(self.params, params);\n            debug('push torrent infohash=%o', torrent.infoHash);\n            try {\n                return await sdk.torrent.touch(torrent, expire, metadata);\n            } catch (e) {\n                if (e == 'not found') {\n                    try {\n                        return await sdk.torrent.push(torrent, expire, metadata);\n                    } catch (e) {\n                        debug(e);\n                        throw e;\n                    }\n                } else {\n                    debug(e);\n                    throw e;\n                }\n            }\n        },\n        async loadTorrentObject(source, metadata, params = {}) {\n            if (!(typeof source == 'object' && source.infoHash != undefined && source.files != undefined)) return false;\n            return source;\n        },\n        async loadTorrentUrl(source, metadata, params = {}) {\n            if (!source.match(/^http/)) return false;\n            if (!source.match(/\\.torrent$/) && !source.match(/[a-fA-F0-9]{40}/)) {\n                return false;\n            }\n            source = await sdk.ext.url(source);\n            return await new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.addEventListener('error', reject);\n                xhr.onreadystatechange = async function() {\n                    if (this.readyState == XMLHttpRequest.DONE) {\n                        const ab = new Uint8Array(this.response);\n                        const buffer = new Buffer(ab.byteLength);\n                        const view = new Uint8Array(ab);\n                        for (let i = 0; i < buffer.length; ++i) {\n                            buffer[i] = view[i];\n                        }\n                        resolve(parseTorrent(buffer));\n                    }\n                };\n                xhr.open('GET', source);\n                xhr.responseType = 'arraybuffer';\n                xhr.send();\n            });\n        },\n        async loadTorrentFile(source, metadata, params = {}) {\n            if (!(typeof source == 'object' && source.type == 'application/x-bittorrent' && source.size)) return false;\n            try {\n                const b = await this.fileToArray(source);\n                return parseTorrent(b);\n            } catch (e) {\n                debug(e);\n                throw e;\n            }\n        },\n        async loadMagnet(source, metadata, params = {}) {\n            params = Object.assign(self.params, params);\n            let torrent = null;\n            if (!source.match(/^magnet/) && !source.match(/^[a-fA-F0-9]{40}$/)) {\n                return false;\n            }\n            try {\n                torrent = parseTorrent(source);\n            } catch (e) {\n                debug(e);\n                throw e;\n            }\n            const infoHash = torrent.infoHash;\n            if (infoHash && params.db) {\n                debug('loading from local db infohash=%o', infoHash)\n                torrent = await params.db.pullTorrent(infoHash);\n            }\n            if (!torrent || !torrent.pieces || torrent.pieces.length == 0) {\n                try {\n                    debug('loading from torrent store infohash=%o', infoHash)\n                    torrent = await sdk.torrent.pull(infoHash, metadata);\n                } catch (e) {\n                    debug(e);\n                    throw e;\n                }\n            }\n            if (!torrent) {\n                debug('loading by magnet uri from peers magnet=%o', source);\n                torrent = await sdk.magnet.fetchTorrent(source, metadata);\n            }\n            return torrent;\n        },\n        fileToArray(file) {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.addEventListener('load', (e) => {\n                    const arr = new Uint8Array(e.target.result);\n                    const buffer = new Buffer(arr);\n                    try {\n                        resolve(buffer);\n                    } catch(e) {\n                        reject(e);\n                    }\n                });\n                reader.addEventListener('error', (err) => {\n                    reject(err);\n                });\n                reader.readAsArrayBuffer(file);\n          });\n        }\n    };\n};","// source: proto/magnet2torrent/magnet2torrent.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar proto = {};\n\ngoog.exportSymbol('Magnet2TorrentReply', null, proto);\ngoog.exportSymbol('Magnet2TorrentRequest', null, proto);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Magnet2TorrentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Magnet2TorrentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Magnet2TorrentRequest.displayName = 'proto.Magnet2TorrentRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Magnet2TorrentReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Magnet2TorrentReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Magnet2TorrentReply.displayName = 'proto.Magnet2TorrentReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Magnet2TorrentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.Magnet2TorrentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Magnet2TorrentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Magnet2TorrentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    magnet: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Magnet2TorrentRequest}\n */\nproto.Magnet2TorrentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Magnet2TorrentRequest;\n  return proto.Magnet2TorrentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Magnet2TorrentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Magnet2TorrentRequest}\n */\nproto.Magnet2TorrentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMagnet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Magnet2TorrentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Magnet2TorrentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Magnet2TorrentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Magnet2TorrentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMagnet();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string magnet = 1;\n * @return {string}\n */\nproto.Magnet2TorrentRequest.prototype.getMagnet = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Magnet2TorrentRequest} returns this\n */\nproto.Magnet2TorrentRequest.prototype.setMagnet = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Magnet2TorrentReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.Magnet2TorrentReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Magnet2TorrentReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Magnet2TorrentReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    torrent: msg.getTorrent_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Magnet2TorrentReply}\n */\nproto.Magnet2TorrentReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Magnet2TorrentReply;\n  return proto.Magnet2TorrentReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Magnet2TorrentReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Magnet2TorrentReply}\n */\nproto.Magnet2TorrentReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTorrent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Magnet2TorrentReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Magnet2TorrentReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Magnet2TorrentReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Magnet2TorrentReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTorrent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes torrent = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.Magnet2TorrentReply.prototype.getTorrent = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {string}\n */\nproto.Magnet2TorrentReply.prototype.getTorrent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTorrent()));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {!Uint8Array}\n */\nproto.Magnet2TorrentReply.prototype.getTorrent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTorrent()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.Magnet2TorrentReply} returns this\n */\nproto.Magnet2TorrentReply.prototype.setTorrent = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: proto/abuse-store/abuse-store.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar proto = {};\n\ngoog.exportSymbol('CheckReply', null, proto);\ngoog.exportSymbol('CheckRequest', null, proto);\ngoog.exportSymbol('PushReply', null, proto);\ngoog.exportSymbol('PushRequest', null, proto);\ngoog.exportSymbol('PushRequest.Cause', null, proto);\ngoog.exportSymbol('PushRequest.Source', null, proto);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PushReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PushReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PushReply.displayName = 'proto.PushReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PushRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PushRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PushRequest.displayName = 'proto.PushRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CheckRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CheckRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CheckRequest.displayName = 'proto.CheckRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CheckReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CheckReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CheckReply.displayName = 'proto.CheckReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PushReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.PushReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PushReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PushReply}\n */\nproto.PushReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PushReply;\n  return proto.PushReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PushReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PushReply}\n */\nproto.PushReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PushReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PushReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PushReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PushRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.PushRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PushRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    noticeId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    infohash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    filename: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    work: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    startedAt: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    email: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    subject: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    cause: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    source: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PushRequest}\n */\nproto.PushRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PushRequest;\n  return proto.PushRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PushRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PushRequest}\n */\nproto.PushRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNoticeId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFilename(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWork(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubject(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.PushRequest.Cause} */ (reader.readEnum());\n      msg.setCause(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.PushRequest.Source} */ (reader.readEnum());\n      msg.setSource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PushRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PushRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PushRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNoticeId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFilename();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getWork();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getStartedAt();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getSubject();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getCause();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n  f = message.getSource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.PushRequest.Cause = {\n  ILLEGAL_CONTENT: 0,\n  MALWARE: 1,\n  APP_ERROR: 2,\n  QUESTION: 3\n};\n\n/**\n * @enum {number}\n */\nproto.PushRequest.Source = {\n  MAIL: 0,\n  FORM: 1\n};\n\n/**\n * optional string notice_id = 1;\n * @return {string}\n */\nproto.PushRequest.prototype.getNoticeId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setNoticeId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string infohash = 2;\n * @return {string}\n */\nproto.PushRequest.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string filename = 3;\n * @return {string}\n */\nproto.PushRequest.prototype.getFilename = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setFilename = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string work = 4;\n * @return {string}\n */\nproto.PushRequest.prototype.getWork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setWork = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 started_at = 5;\n * @return {number}\n */\nproto.PushRequest.prototype.getStartedAt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setStartedAt = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string email = 6;\n * @return {string}\n */\nproto.PushRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string description = 7;\n * @return {string}\n */\nproto.PushRequest.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string subject = 8;\n * @return {string}\n */\nproto.PushRequest.prototype.getSubject = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setSubject = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n/**\n * optional Cause cause = 9;\n * @return {!proto.PushRequest.Cause}\n */\nproto.PushRequest.prototype.getCause = function() {\n  return /** @type {!proto.PushRequest.Cause} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {!proto.PushRequest.Cause} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setCause = function(value) {\n  return jspb.Message.setProto3EnumField(this, 9, value);\n};\n\n\n/**\n * optional Source source = 10;\n * @return {!proto.PushRequest.Source}\n */\nproto.PushRequest.prototype.getSource = function() {\n  return /** @type {!proto.PushRequest.Source} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!proto.PushRequest.Source} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setSource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CheckRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.CheckRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CheckRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    infohash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CheckRequest}\n */\nproto.CheckRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CheckRequest;\n  return proto.CheckRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CheckRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CheckRequest}\n */\nproto.CheckRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CheckRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CheckRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CheckRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string infohash = 1;\n * @return {string}\n */\nproto.CheckRequest.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CheckRequest} returns this\n */\nproto.CheckRequest.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CheckReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.CheckReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CheckReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exists: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CheckReply}\n */\nproto.CheckReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CheckReply;\n  return proto.CheckReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CheckReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CheckReply}\n */\nproto.CheckReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setExists(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CheckReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CheckReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CheckReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExists();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool exists = 1;\n * @return {boolean}\n */\nproto.CheckReply.prototype.getExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CheckReply} returns this\n */\nproto.CheckReply.prototype.setExists = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// package: \n// file: proto/download-progress/download-progress.proto\n\nvar proto_download_progress_download_progress_pb = require(\"../../proto/download-progress/download-progress_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar DownloadProgress = (function () {\n  function DownloadProgress() {}\n  DownloadProgress.serviceName = \"DownloadProgress\";\n  return DownloadProgress;\n}());\n\nDownloadProgress.Stat = {\n  methodName: \"Stat\",\n  service: DownloadProgress,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_download_progress_download_progress_pb.StatRequest,\n  responseType: proto_download_progress_download_progress_pb.StatReply\n};\n\nDownloadProgress.StatStream = {\n  methodName: \"StatStream\",\n  service: DownloadProgress,\n  requestStream: false,\n  responseStream: true,\n  requestType: proto_download_progress_download_progress_pb.StatRequest,\n  responseType: proto_download_progress_download_progress_pb.StatReply\n};\n\nexports.DownloadProgress = DownloadProgress;\n\nfunction DownloadProgressClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nDownloadProgressClient.prototype.stat = function stat(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(DownloadProgress.Stat, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nDownloadProgressClient.prototype.statStream = function statStream(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(DownloadProgress.StatStream, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nexports.DownloadProgressClient = DownloadProgressClient;\n\n","// package: \n// file: proto/torrent-web-seeder/torrent-web-seeder.proto\n\nvar proto_torrent_web_seeder_torrent_web_seeder_pb = require(\"../../proto/torrent-web-seeder/torrent-web-seeder_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar TorrentWebSeeder = (function () {\n  function TorrentWebSeeder() {}\n  TorrentWebSeeder.serviceName = \"TorrentWebSeeder\";\n  return TorrentWebSeeder;\n}());\n\nTorrentWebSeeder.Stat = {\n  methodName: \"Stat\",\n  service: TorrentWebSeeder,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_torrent_web_seeder_torrent_web_seeder_pb.StatRequest,\n  responseType: proto_torrent_web_seeder_torrent_web_seeder_pb.StatReply\n};\n\nTorrentWebSeeder.StatStream = {\n  methodName: \"StatStream\",\n  service: TorrentWebSeeder,\n  requestStream: false,\n  responseStream: true,\n  requestType: proto_torrent_web_seeder_torrent_web_seeder_pb.StatRequest,\n  responseType: proto_torrent_web_seeder_torrent_web_seeder_pb.StatReply\n};\n\nTorrentWebSeeder.Files = {\n  methodName: \"Files\",\n  service: TorrentWebSeeder,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_torrent_web_seeder_torrent_web_seeder_pb.FilesRequest,\n  responseType: proto_torrent_web_seeder_torrent_web_seeder_pb.FilesReply\n};\n\nexports.TorrentWebSeeder = TorrentWebSeeder;\n\nfunction TorrentWebSeederClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nTorrentWebSeederClient.prototype.stat = function stat(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(TorrentWebSeeder.Stat, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nTorrentWebSeederClient.prototype.statStream = function statStream(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(TorrentWebSeeder.StatStream, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nTorrentWebSeederClient.prototype.files = function files(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(TorrentWebSeeder.Files, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.TorrentWebSeederClient = TorrentWebSeederClient;\n\n","// package: \n// file: proto/torrent-store/torrent-store.proto\n\nvar proto_torrent_store_torrent_store_pb = require(\"../../proto/torrent-store/torrent-store_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar TorrentStore = (function () {\n  function TorrentStore() {}\n  TorrentStore.serviceName = \"TorrentStore\";\n  return TorrentStore;\n}());\n\nTorrentStore.Push = {\n  methodName: \"Push\",\n  service: TorrentStore,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_torrent_store_torrent_store_pb.PushRequest,\n  responseType: proto_torrent_store_torrent_store_pb.PushReply\n};\n\nTorrentStore.Pull = {\n  methodName: \"Pull\",\n  service: TorrentStore,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_torrent_store_torrent_store_pb.PullRequest,\n  responseType: proto_torrent_store_torrent_store_pb.PullReply\n};\n\nTorrentStore.Touch = {\n  methodName: \"Touch\",\n  service: TorrentStore,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_torrent_store_torrent_store_pb.TouchRequest,\n  responseType: proto_torrent_store_torrent_store_pb.TouchReply\n};\n\nexports.TorrentStore = TorrentStore;\n\nfunction TorrentStoreClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nTorrentStoreClient.prototype.push = function push(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(TorrentStore.Push, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nTorrentStoreClient.prototype.pull = function pull(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(TorrentStore.Pull, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nTorrentStoreClient.prototype.touch = function touch(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(TorrentStore.Touch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.TorrentStoreClient = TorrentStoreClient;\n\n","import {grpc} from '@improbable-eng/grpc-web';\n\nconst debug = require('debug')('webtor:sdk');\n\nexport default async function(client, request, onMessage, onEnd, metadata = {}, params = {}) {\n    metadata['token'] = await params.getToken();\n    metadata['api-key'] = params.apiKey;\n    let retryCount = 0;\n    return new Promise(function(resolve, reject) {\n        function process() {\n            const c = client();\n            if (onMessage) {\n                c.onMessage((message) => {\n                    debug('got message=%o', message.toObject());\n                    onMessage(message.toObject(), resolve, reject);\n                });\n            }\n            if (onEnd) {\n                c.onEnd(async (res) => {\n                    if ((res == grpc.Code.Unknown || res == grpc.Code.Unavailable) && params.retryInterval && params.retryLimit > 0 && retryCount < params.retryLimit) {\n                        debug('failed to get process request error=%o retry count=%o', res, retryCount);\n                        await (new Promise(resolve => setTimeout(resolve, params.retryInterval)));\n                        retryCount++;\n                        process();\n                    } else {\n                        onEnd(res, resolve, reject);\n                    }\n                });\n            }\n            c.start(new grpc.Metadata(metadata));\n            c.send(request);\n            c.finishSend();\n        }\n        process();\n    });\n}\n","import {Magnet2Torrent} from '../../proto/magnet2torrent/magnet2torrent_pb_service';\nimport {Magnet2TorrentRequest} from '../../proto/magnet2torrent/magnet2torrent_pb';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport process from './process';\nimport parseTorrent from 'parse-torrent';\nconst debug = require('debug')('webtor:sdk:magnet');\n\nexport default function(params = {}) {\n    const self = {params};\n    return {\n        fetchTorrent(magnet, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = params.apiUrl + '/magnet2torrent';\n            debug('fetch torrent magnet=%s url=%s metadata=%o', magnet, url, metadata);\n            const request = new Magnet2TorrentRequest();\n            request.setMagnet(magnet);\n            const client = () => grpc.client(Magnet2Torrent.Magnet2Torrent, {\n                host:      url,\n                transport: grpc.WebsocketTransport(),\n                debug:     params.grpcDebug,\n            });\n            const onMessage = (message, resolve, reject) => {\n                if (message.torrent == '') {\n                    return reject('no torrent');\n                }\n                let torrent = Buffer.from(message.torrent, 'base64');\n                torrent = parseTorrent(torrent);\n                debug('and finally torrent=%o', torrent);\n                resolve(torrent);\n            }\n            const onEnd = (res, resolve, reject) => {\n                if (res !== grpc.Code.OK) {\n                    reject('failed to fetch torrent code=' + res);\n                }\n            }\n            return process(client, request, onMessage, onEnd, metadata, params);\n        },\n    };\n};","import {AbuseStore} from '../../proto/abuse-store/abuse-store_pb_service';\nimport {PushRequest} from '../../proto/abuse-store/abuse-store_pb';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport process from './process';\nconst debug = require('debug')('webtor:sdk:abuse');\n\nexport default function(params = {}) {\n    const self = {params};\n    return {\n        push(abuse, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = params.apiUrl + '/abuse';\n            debug('push abuse url=%s metadata=%o', url, metadata);\n            const request = new PushRequest();\n            request.setSubject(abuse.subject);\n            request.setDescription(abuse.description);\n            request.setInfohash(abuse.infohash);\n            request.setFilename(abuse.filename);\n            request.setEmail(abuse.email);\n            request.setWork(abuse.work);\n            request.setCause(abuse.cause);\n            request.setSource(PushRequest.Source.FORM);\n            const client = () => grpc.client(AbuseStore.Push, {\n                host: url,\n                // transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            const onEnd = (res, resolve, reject) => {\n                if (res === grpc.Code.OK) {\n                    debug('abuse stored');\n                    resolve();\n                } else {\n                    reject('failed to push abuse code=' + res);\n                }\n            }\n            return process(client, request, null, onEnd, metadata, params);\n        },\n    };\n};","import {TorrentWebSeeder} from  '../../../proto/torrent-web-seeder/torrent-web-seeder_pb_service';\nimport {StatRequest, StatReply} from '../../../proto/torrent-web-seeder/torrent-web-seeder_pb';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport process from '../process';\nconst debug = require('debug')('webtor:sdk:seeder:stats');\nimport invert from 'lodash/invert';\n\nclass Stats {\n    constructor(url, path) {\n        this.url = url;\n        this.path = path;\n        this.closed = false;\n        this.client = null;\n    }\n    close() {\n        if (this.closed) return;\n        this.closed = true;\n        debug('close stats url=%o path=%o', this.url, this.path);\n        if (this.client) this.client.close();\n    }\n    start(onMessage, metadata, params) {\n        const request = new StatRequest();\n        request.setPath(this.path);\n        const client = () => { \n            const c = grpc.client(TorrentWebSeeder.StatStream, {\n                host: this.url,\n                transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            this.client = c;\n            return c;\n        };\n        const statuses = invert(StatReply.Status);\n        let map = null;\n        const onMessageWrapper = (message) => {\n            message.statusName = statuses[message.status];\n            if (!map && message.status != 0) {\n                map = message.piecesList;\n            } else {\n                for (const p of message.piecesList) {\n                    for (const m of map) {\n                        if (m.position == p.position) {\n                            m.complete = p.complete;\n                            m.priority = p.priority;\n                        }\n                    }\n                }\n                message.piecesList = JSON.parse(JSON.stringify(map));\n            }\n            onMessage(this.path, message);\n        }\n        const onEnd = (res, resolve, reject) => {\n            if (res !== grpc.Code.OK) {\n                reject('failed to get stats torrent code=' + res);\n            } else {\n                debug('stats finished url=%o path=%o', this.url, this.path);\n                this.close();\n                resolve();\n            }\n        }\n\n        return process(client, request, onMessageWrapper, onEnd, metadata, params);\n    }\n}\n\nexport default function(url, path, onMessage, metadata = {}, params = {}) {\n    const stats = new Stats(url, path);\n    stats.start(onMessage, metadata, params);\n    return stats;\n}","import {DownloadProgress} from  '../../../proto/download-progress/download-progress_pb_service';\nimport {StatRequest, StatReply} from '../../../proto/download-progress/download-progress_pb';\nimport {grpc} from '@improbable-eng/grpc-web';\nimport process from '../process';\nconst debug = require('debug')('webtor:sdk:seeder:downloadProgress');\nimport invert from 'lodash/invert';\n\nclass Stats {\n    constructor(url, path) {\n        this.url = url;\n        this.path = path;\n        this.closed = false;\n        this.client = null;\n    }\n    close() {\n        if (this.closed) return;\n        this.closed = true;\n        debug('close download progress url=%o path=%o', this.url, this.path);\n        if (this.client) this.client.close();\n    }\n    start(onMessage, onEnd, metadata, params) {\n        const request = new StatRequest();\n        const client = () => { \n            const c = grpc.client(DownloadProgress.StatStream, {\n                host: this.url,\n                transport: grpc.WebsocketTransport(),\n                debug: params.grpcDebug,\n            });\n            this.client = c;\n            return c;\n        };\n        const statuses = invert(StatReply.Status);\n        const onMessageWrapper = (message) => {\n            message.statusName = statuses[message.status];\n            onMessage(this.path, message);\n        }\n        const onEndWrapper = (res, resolve, reject) => {\n            if (res !== grpc.Code.OK) {\n                reject('failed to get download progress code=' + res);\n            } else {\n                debug('download progress finished url=%o path=%o', this.url, this.path);\n                this.close();\n                resolve();\n            }\n            onEnd(this.path, res);\n        }\n\n        return process(client, request, onMessageWrapper, onEndWrapper, metadata, params);\n    }\n}\n\nexport default function(url, path, onMessage, onEnd, metadata = {}, params = {}) {\n    const st = new Stats(url, path);\n    st.start(onMessage, onEnd, metadata, params);\n    return st;\n}","import stats from './seeder/stats';\nimport downloadProgress from './seeder/downloadProgress';\nconst debug = require('debug')('webtor:sdk:seeder');\nconst Url = require('url-parse');\nvar md5 = require('md5');\n\nclass WebSeeder {\n    constructor(infoHash, params, sdk) {\n        this.infoHash = infoHash;\n        this.params = params;\n        this.sdk = sdk;\n    }\n\n    addDownloadId(metadata = {}, path) {\n        if (!metadata['download-id']) {\n            metadata = Object.assign({}, metadata, {\n                'download-id': md5(metadata['user-id'] + this.infoHash + path + Date.now().toString()),\n            });\n        }\n        return metadata;\n    }\n\n    async url(path, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params);\n        path = path.replace(/^\\//, '');\n        let url = new Url(params.apiUrl);\n        metadata = this.addDownloadId(metadata, path);\n        url.infoHash = this.infoHash;\n        url.path = path;\n        const pathname = '/' + this.infoHash + '/' + encodeURIComponent(path);\n        url.infoHash = this.infoHash;\n        url.set('pathname', pathname);\n        const query = await this.sdk.util.makeQuery(metadata, params);\n        url.set('query', query);\n        if (params.subdomains) {\n            url = await this.sdk.util.cacheUrl(url, metadata, params);\n            const cached = await this.sdk.util.isCached(url, metadata, params);\n            // const completedPieces = await this.sdk.util.throttledCompletedPieces(url, metadata, params);\n            // const pieceCache = completedPieces.length > 0;\n            const deliveryType = this.sdk.util.getDeliveryType(url.pathname);\n            // if (deliveryType === undefined) return url;\n            let pool = deliveryType == 'transcode' ? params.pools.transcoder : params.pools.seeder;\n            pool = cached ? params.pools.cache : pool;\n            const m = {\n                infohash: this.infoHash,\n                \"use-bandwidth\": cached,\n                \"use-cpu\": !cached,\n                \"skip-active-job-search\": cached,\n                pool: pool.join(','),\n            }\n            const subdomainUrl = await this.sdk.util.subdomainUrl(url, context, m, params);\n            if (subdomainUrl === false) return false;\n            subdomainUrl.primaryHost = url.host;\n            if (subdomainUrl) {\n                return subdomainUrl;\n            }\n        }\n        return url;\n    }\n\n    async urlPostProcess(url, metadata, params) {\n        const cp = await this.completedPieces(metadata, params);\n        if (cp.length == 0) {\n            return url;\n        }\n        const cdnUrl = this.sdk.util.cdnUrl(url, metadata, params);\n        if (cdnUrl) {\n            return cdnUrl;\n        }\n        return url;\n    }\n\n    async streamUrl(path, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params);\n        let url = await this.url(path, metadata, params, context);\n        url = await this.sdk.util.streamUrl(url, metadata, params, context);\n        url = await this.urlPostProcess(url, metadata, params);\n        return url;\n    }\n\n    async segmentUrl(path, segment, context = {}, metadata = {}, params = {}) {\n        params = Object.assign({}, this.params, params);\n        let url = await this.url(path, metadata, params, context);\n        if (url === false) return false;\n        url = await this.sdk.util.segmentUrl(url, segment, metadata, params, context);\n        url = await this.urlPostProcess(url, metadata, params);\n        return url;\n    }\n\n    async error(path, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params);\n        let url = await this.url(path, metadata, params, context);\n        return await this.sdk.util.error(url, metadata, params);\n    }\n\n    async pieceUrl(id, metadata = {}, params = {}) {\n        let url = await this.url('', metadata, params);\n        return this.sdk.util.pieceUrl(url, id);\n    }\n\n    async mediaInfo(path, metadata = {}, params = {}) {\n        params = Object.assign({}, this.params, params);\n        const url = await this.url(path, metadata, params);\n        return await this.sdk.util.mediaInfo(url, metadata, params);\n    }\n\n    async completedPieces(metadata = {}, params = {}) {\n        params = Object.assign({}, this.params, params);\n        const url = await this.url('', metadata, params);\n        return await this.sdk.util.throttledCompletedPieces(url, metadata, params);\n    }\n\n    async isCached(path, metadata = {}, params = {}) {\n        params = Object.assign({}, this.params, params);\n        const url = await this.url(path, metadata, params);\n        const cached = await this.sdk.util.isCached(url, metadata, params);\n        return cached;\n    }\n\n    async openSubtitles(path, metadata = {}, params = {}) {\n        const url = await this.url(path, metadata, params);\n        return await this.sdk.util.openSubtitles(url);\n    }\n\n    async downloadUrl(path, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params);\n        if (params.downloadUrl) {\n            params.apiUrl = params.downloadUrl;\n        }\n        metadata.download = true;\n        let url = await this.url(path, metadata, params, context);\n        url = await this.urlPostProcess(url, metadata, params);\n        return url;\n    }\n\n    async downloadUrlWithProgress(path, onMessage, onEnd, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params, {cdn: false});\n        metadata = this.addDownloadId(metadata, path);\n        const downloadUrl = await this.downloadUrl(path, metadata, params, context);\n        const fileName = path.split('/').pop();\n        const url = this.sdk.util.dpUrl(downloadUrl, fileName);\n        const statUrl = this.sdk.util.dpStatUrl(downloadUrl);\n        downloadProgress(statUrl, path, onMessage, onEnd, metadata, params); \n        return url;\n    }\n\n    async zipUrl(path, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params);\n        if (params.downloadUrl) {\n            params.apiUrl = params.downloadUrl;\n        }\n        const fileName = path.split('/').pop();\n        let url = await this.url(path, metadata, params, context);\n        url.set('pathname', url.pathname + '~arch/' + fileName + '.zip');\n        return url;\n    }\n    async zipUrlWithProgress(path, onMessage, onEnd, metadata = {}, params = {}, context = {}) {\n        params = Object.assign({}, this.params, params, {cdn: false});\n        metadata = this.addDownloadId(metadata, path);\n        const zipUrl = await this.zipUrl(path, metadata, params, context);\n        const fileName = path.split('/').pop() + '.zip';\n        const url = this.sdk.util.dpUrl(zipUrl, fileName);\n        const statUrl = this.sdk.util.dpStatUrl(zipUrl);\n        downloadProgress(statUrl, path, onMessage, onEnd, metadata, params); \n        return url;\n    }\n\n    async stats(path, onMessage, metadata = {}, params = {}) {\n        params = Object.assign({}, this.params, params);\n        let url = await this.url(path, metadata, params);\n        url = `${url.protocol}//${url.hostname}/${this.infoHash}`;\n        debug('get file stats infoHash=%s url=%s path=%s metadata=%o', this.infoHash, url, path, metadata);\n        return stats(url, path, onMessage, metadata, params);\n    }\n}\n\nexport default function(params, sdk) {\n    const self = {params, sdk};\n    return {\n        get(infoHash, metadata = {}, params = {}) {\n            params = Object.assign({}, self.params, params);\n            return new WebSeeder(infoHash, params, self.sdk);\n        },\n    };\n};","const Url = require('url-parse');\n\nexport default function(params, sdk) {\n    const self = {params, sdk};\n    return {\n        async url(metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = new Url(params.apiUrl);\n            const pathname = '/tracker/';\n            url.set('pathname', pathname);\n            url.set('protocol', 'wss:');\n            const query = await self.sdk.util.makeQuery(metadata, params);\n            url.set('query', query);\n            return url;\n        },\n    };\n};","const path = require('path');\nconst Url = require('url-parse');\nimport ISO6391 from 'iso-639-1';\nimport mime from 'mime';\nvar md5 = require('md5');\nconst debug = require('debug')('webtor:sdk:util');\nimport bind from 'lodash/bind';\nimport throttle from 'lodash/throttle';\nconst debugFetch = function(url) {\n    debug('fetch url=%o', url.href);\n    return fetch(url);\n}\nconst retryFetch = require('fetch-retry')(debugFetch, {\n    retries: 3,\n    retryDelay: function(attempt, error, response) {\n        return Math.pow(2, attempt) * 1000;\n    },\n    retryOn: function(attempt, error, response) {\n        if (error !== null || response.status >= 500) {\n            debug('got fetch error retry count=%o', attempt);\n            return true;\n        }\n    },\n});\n\nfunction cleanExt(ext) {\n    return ext.toLowerCase().replace(/~[a-z0-9]+$/, '');\n}\nfunction cleanPath(p) {\n    return p.replace(/\\/\\//, '/');\n}\nfunction buf2hex(buffer) { // buffer is an ArrayBuffer\n    return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n}\n\nexport default function(params, sdk) {\n    const self = {params, sdk};\n    const throttledFuncs = {};\n    const util = {\n        async makeQuery(metadata = {}, params = {}) {\n            params = Object.assign({}, self.params, params);\n            metadata = Object.assign({}, metadata);\n            const query = metadata;\n            const token = await params.getToken();\n            if (token) query.token = token;\n            if (params.apiKey) query[\"api-key\"] = params.apiKey;\n            return query;\n        },\n        getDeliveryType(file) {\n            if (!file) return;\n            let ext = path.extname(file);\n            ext = cleanExt(ext);\n            // Browser unsupported streaming formats\n            if ('.avi .mkv .flac .m4a .m4v .ts .vob'.split(' ').includes(ext)) return 'transcode';\n            // Browser supported streaming formats\n            if ('.mp4 .mp3 .wav .ogg .webm'.split(' ').includes(ext)) return 'webseed';\n            // Browser supported image formats\n            if ('.png .gif .jpg .jpeg'.split(' ').includes(ext)) return 'webseed';\n            // Browser unsupported subtitle formats\n            if ('.vtt .srt'.split(' ').includes(ext)) return 'webseed';\n        },\n        getMediaType(file) {\n            if (!file) return;\n            let ext = path.extname(file);\n            ext = cleanExt(ext);\n            // Video\n            if ('.avi .mkv .mp4 .webm .m4v .ts .vob'.split(' ').includes(ext)) return 'video';\n            // Audio\n            if ('.mp3 .wav .ogg .flac .m4a'.split(' ').includes(ext)) return 'audio';\n            // Images\n            if ('.png .gif .jpg .jpeg'.split(' ').includes(ext)) return 'image';\n            // Subtitles\n            if ('.srt .vtt'.split(' ').includes(ext)) return 'subtitle';\n        },\n        getMimeType(file) {\n            if (typeof file == 'object') {\n                file = file.pathname;\n            }\n            const ext = path.extname(file);\n            return mime.getType(ext);\n        },\n        getSubtitleSrcLang(name) {\n            const baseName = path.basename(name, path.extname(name));\n            for (const code of ISO6391.getAllCodes()) {\n                if (baseName.endsWith('.' + code)) return code;\n            }\n            return false;\n        },\n        getSubtitleLang(name) {\n            const code = this.getSubtitleSrcLang(name);\n            if (code == false) return false;\n            return this.getLang(code);\n        },\n        getLang(code) {\n            return {\n                code,\n                name: ISO6391.getName(code),\n                nativeName: ISO6391.getNativeName(code),\n            };\n        },\n        cloneUrl(url) {\n            return Object.assign(new Url(), url);\n        },\n        vttUrl(url) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~vtt/' + encodeURIComponent(path.basename(url.pathname).replace(/srt$/, 'vtt'))));\n            return url;\n        },\n        primaryUrl(url) {\n            if (!url) return url;\n            url = this.cloneUrl(url);\n            if (url.primaryHost) {\n                url.host = url.primaryHost;\n            }\n            return url;\n        },\n        completedPiecesUrl(url) {\n            url = this.cloneUrl(url);\n            url = this.tcUrl(url);\n            url.set('pathname', cleanPath(url.pathname.replace(/~tc.*$/, '~tc/completed_pieces')));\n            return url;\n        },\n        transcodeDoneMarkerUrl(url) {\n            url = this.cloneUrl(url);\n            url = this.primaryUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~trc/done'));\n            return url;\n        },\n        multibitrateDoneMarkerUrl(url) {\n            url = this.cloneUrl(url);\n            url = this.primaryUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~mtrc/done'));\n            return url;\n        },\n        transcodeIndexUrl(url) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~trc/index.m3u8'));\n            return url;\n        },\n        multibitrateIndexUrl(url) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~mtrc/index.m3u8'));\n            return url;\n        },\n        pieceUrl(url, id) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '/piece/' + id));\n            return url;\n        },\n        tcUrl(url) {\n            url = this.cloneUrl(url);\n            if (url.pathname.includes('~tc')) return url;\n            url.set('pathname', cleanPath(url.pathname + '~tc/' + encodeURIComponent(path.basename(url.path))));\n            return url;\n        },\n        hlsUrl(url, file) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~hls/' + file));\n            return url;\n        },\n        trcUrl(url, file) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~trc/' + file));\n            return url;\n        },\n        mtrcUrl(url, file) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~mtrc/' + file));\n            return url;\n        },\n        vodUrl(url, file) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~vod/hls/' + md5(cleanPath(url.pathname)) + '/' + file));\n            return url;\n        },\n        viUrl(url, path) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~vi' + path));\n            return url;\n        },\n        dpUrl(url, file) {\n            url = this.cloneUrl(url);\n            url.set('pathname', cleanPath(url.pathname + '~dp/' + file));\n            return url;\n        },\n        dpStatUrl(url) {\n            url = this.cloneUrl(url);\n            url.set('pathname', '/dp');\n            url.set('query', '');\n            return url;\n        },\n        async baseStreamUrl(url, file, metadata, params, context) {\n            url = this.cloneUrl(url);\n            const deliveryType = this.getDeliveryType(url.pathname);\n            if (params.vod && cleanExt(path.extname(url.pathname)) == '.mp4') {\n                if (params.multibitrate) {\n                    const done = await this.throttledMultibitrateDoneMarker(url, metadata, params);\n                    if (done) {\n                        url.multibitrate = true;\n                        url.cached = true;\n                        return this.mtrcUrl(url, file);\n                    }\n                }\n                return this.vodUrl(url, file);\n            } else if (cleanExt(path.extname(url.pathname)) == '.srt') {\n                return this.vttUrl(url);\n            } else if (deliveryType == 'transcode') {\n                if (params.multibitrate) {\n                    const done = await this.throttledMultibitrateDoneMarker(url, metadata, params);\n                    if (done) {\n                        url.multibitrate = true;\n                        url.cached = true;\n                        return this.mtrcUrl(url, file);\n                    }\n                }\n                if (params.cache) {\n                    const done = await this.throttledTranscodeDoneMarker(url, metadata, params);\n                    if (done) {\n                        url.cached = true;\n                        return this.trcUrl(url, file);\n                    }\n                }\n                return this.hlsUrl(url, file);\n            }\n            return url;\n        },\n        async streamUrl(url, metadata, params, context) {\n            return this.baseStreamUrl(url, 'index.m3u8', metadata, params, context);\n        },\n        async segmentUrl(url, segment, metadata, params, context) {\n            return this.baseStreamUrl(url, segment, metadata, params, context);\n        },\n        async error(url, metadata, params) {\n            url = this.cloneUrl(url);\n            const deliveryType = this.getDeliveryType(url.pathname);\n            const mediaType = this.getMediaType(url.pathname);\n            if (deliveryType == 'webseed' || mediaType == 'subtitle') return;\n            if (params.cache) {\n                const done = await this.throttledTranscodeDoneMarker(url, metadata, params);\n                if (done) {\n                    return;\n                } else {\n                    url = this.hlsUrl(url, 'error.log');\n                }\n            } else {\n                url = this.hlsUrl(url, 'error.log');\n            }\n            const res = await fetch(url);\n            const err = await res.text();\n            return err;\n        },\n        async transcodeDoneMarker(url) {\n            url = this.cloneUrl(url);\n            url = this.transcodeDoneMarkerUrl(url);\n            const res = await(retryFetch(url));\n            return res.status == 200;\n        },\n        async multibitrateDoneMarker(url) {\n            url = this.cloneUrl(url);\n            url = this.multibitrateDoneMarkerUrl(url);\n            const res = await(retryFetch(url));\n            return res.status == 200;\n        },\n\n        async transcodeIndexExists(url) {\n            url = this.cloneUrl(url);\n            url = this.transcodeIndexUrl(url);\n            const res = await(retryFetch(url));\n            return res.status == 200;\n        },\n\n        async multibitrateIndexExists(url) {\n            url = this.cloneUrl(url);\n            url = this.multibitrateIndexUrl(url);\n            const res = await(retryFetch(url));\n            return res.status == 200;\n        },\n\n        async completedPieces(url) {\n            url = this.cloneUrl(url);\n            url = this.completedPiecesUrl(url);\n            const res = await(retryFetch(url));\n            const buf = await res.arrayBuffer();\n            const byteArr = new Uint8Array(buf);\n            const hex = buf2hex(byteArr);\n            const pieces = [];\n            let p = '';\n            for (const c of hex) {\n                p += c;\n                if (p.length == 40) {\n                    pieces.push(p);\n                    p = '';\n                }\n            }\n            return pieces;\n        },\n\n        async mediaInfo(url, metadata = {}, params = {}) {\n            url = this.cloneUrl(url);\n            const deliveryType = this.getDeliveryType(url.pathname);\n            const mediaType = this.getMediaType(url.pathname);\n            if (deliveryType == 'webseed' || mediaType == 'subtitle') return {};\n            if (params.cache) {\n                const done = await this.throttledTranscodeDoneMarker(url, metadata, params);\n                if (done) {\n                    url = this.trcUrl(url, 'index.json');\n                } else {\n                    url = this.hlsUrl(url, 'index.json');\n                }\n            } else {\n                url = this.hlsUrl(url, 'index.json');\n            }\n            const res = await(retryFetch(url));\n            const mediaInfo = await res.json();\n            return mediaInfo;\n        },\n        async openSubtitles(url) {\n            url = this.cloneUrl(url);\n            const mediaType = this.getMediaType(url.pathname);\n            if (mediaType != 'video') return {};\n            const subtitlesUrl = this.viUrl(url, '/subtitles.json');\n            const res = await(retryFetch(subtitlesUrl));\n            const data = await res.json();\n\n            for (const k in data) {\n                const format = data[k].format; \n                if (format != 'srt' && format != 'vtt') continue;\n                let src = data[k].src;\n                let sUrl = this.viUrl(url, src);\n                if (format != 'vtt') {\n                    sUrl = this.vttUrl(sUrl);\n                }\n                data[k].src = sUrl\n            }\n            return data;\n        },\n        async subdomainsUrl(metadata = {}, params = {}) {\n            params = Object.assign({}, self.params, params);\n            const url = new Url(params.apiUrl);\n            const pathname = '/subdomains.json';\n            url.set('pathname', pathname);\n            const query = await self.sdk.util.makeQuery(metadata, params);\n            url.set('query', query);\n            return url;\n        },\n        async checkApi(metadata = {}, params = {}) {\n            params = Object.assign({}, self.params, params);\n            return fetch(params.apiUrl);\n        },\n        async subdomains(u, path, metadata = {}, params = {}) {\n            params = Object.assign({}, self.params, params);\n            const url = await this.subdomainsUrl(metadata, params);\n            const res = await(retryFetch(url));\n            const s = await res.json();\n            const rr = [];\n            for (const e of s) {\n                rr.push(e);\n            }\n            return rr;\n        },\n        isCDNAllowed(path, params = {}) {\n            params = Object.assign({}, self.params, params);\n            for (const a of params.cdnPathSuffixes) {\n                if (cleanExt(path).endsWith(a)) return true;\n            }\n            return false;\n        },\n        cdnUrl(url, metadata = {}, params = {}) {\n            url = this.cloneUrl(url);\n            params = Object.assign({}, self.params, params);\n            if (params.cdn && params.cdnUrl && this.isCDNAllowed(url.pathname, params)) {\n                let cdnUrl = new Url(params.cdnUrl);\n                url.set('hostname', cdnUrl.hostname);\n                url.set('protocol', cdnUrl.protocol);\n                url.set('query', '?api-key=' + params.apiKey);\n                return url;\n            }\n            return false;\n        },\n        async throttled(func, interval, url, file, metadata, params, k) {\n            let key = url.infoHash + file + func.name;\n            if (k) key += k;\n            if (!throttledFuncs[key]) {\n                throttledFuncs[key] = throttle(bind(func, this, url, file, metadata, params), interval, {\n                    trailing: false,\n                });\n            }\n            const tf = throttledFuncs[key];\n            return await tf();\n        },\n        async cacheUrl(url, metadata, params) {\n            const completedPieces = await this.throttledCompletedPieces(url, metadata, params);\n            if (completedPieces.length > 0) {\n                return this.tcUrl(url);\n            }\n            return url;\n\n        },\n        async throttledCompletedPieces(url, metadata = {}, params = {}) {\n            let completedPieces = [];\n            if (params.cache) {\n                completedPieces = await this.throttled(this.completedPieces, 10*60*1000, url, null, metadata, params);\n            }\n            return completedPieces;\n        },\n        async throttledTranscodeIndexExists(url, metadata = {}, params = {}) {\n            let done = false;\n            if (params.cache) {\n                done = await this.throttled(this.transcodeIndexExists, 10*60*1000, url, url.path, metadata, params);\n            }\n            return done;\n        },\n        async throttledTranscodeDoneMarker(url, metadata = {}, params = {}) {\n            let done = false;\n            if (params.cache) {\n                done = await this.throttled(this.transcodeDoneMarker, 10*60*1000, url, url.path, metadata, params);\n            }\n            return done;\n        },\n        async throttledMultibitrateDoneMarker(url, metadata = {}, params = {}) {\n            let done = false;\n            if (params.cache) {\n                done = await this.throttled(this.multibitrateDoneMarker, 10*60*1000, url, url.path, metadata, params);\n            }\n            return done;\n        },\n        async throttledMultibitrateIndexExists(url, metadata = {}, params = {}) {\n            let done = false;\n            if (params.cache) {\n                done = await this.throttled(this.multibitrateIndexExists, 10*60*1000, url, url.path, metadata, params);\n            }\n            return done;\n        },\n        async isCached(url, metadata = {}, params = {}) {\n            const deliveryType = this.getDeliveryType(url.pathname);\n            const mediaType = this.getMediaType(url.pathname);\n            if (mediaType == 'video') {\n                if (await this.throttledMultibitrateDoneMarker(url, metadata, params)) return true;\n            }\n            if (deliveryType == 'transcode') {\n                if (await this.throttledTranscodeDoneMarker(url, metadata, params)) return true;\n            }\n            const completedPieces = await this.throttledCompletedPieces(url, metadata, params);\n            return completedPieces.length > 0;\n        },\n        async subdomainUrl(url, context = {}, metadata = {}, params = {}) {\n            url = this.cloneUrl(url);\n            params = Object.assign({}, self.params, params);\n            if (!params.subdomains) {\n                return url;\n            }\n            try {\n                // const cached = await this.isCached(url, metadata, params);\n                const subdomains = await this.throttled(this.subdomains, 30*1000, url, null, metadata, params, metadata.pool);\n                if (!context.usedSubdomains) context.usedSubdomains = [];\n                let sub = subdomains.filter(e => !context.usedSubdomains.includes(e));\n                if (sub.length == 0 && subdomains.length > 0) {\n                    sub = [subdomains[0]];\n                    context.usedSubdomains = [];\n                }\n                if (sub.length !== 0) {\n                    const s = sub[0];\n                    url.set('hostname', s + '.' + url.hostname);\n                    context.usedSubdomains.push(s);\n                }\n            } catch (e) {\n                debug(e);\n                console.log(e);\n                return false;\n            }\n            return url;\n        }\n    };\n    return util;\n}","const pathParse = require('path-parse');\nconst Url = require('url-parse');\n\nexport default function(params, sdk) {\n    const self = {params, sdk};\n    return {\n        async url(extUrl, metadata = {}, params = {}) {\n            params = Object.assign(self.params, params);\n            const url = new Url(params.apiUrl);\n            let fileName = \"\";\n            if (params.fileName) {\n                fileName = params.fileName;\n            } else {\n                fileName = pathParse(extUrl).base;\n            }\n            const encodedUrl = encodeURIComponent(btoa(extUrl));\n            const pathname = '/ext/' + encodedUrl + '/' + fileName;\n            url.set('pathname', pathname);\n            const query = await self.sdk.util.makeQuery(metadata, params);\n            url.set('query', query);\n            return url;\n        },\n        async streamSubtitleUrl(extUrl, metadata = {}, params = {}) {\n            const url = await this.url(extUrl, metadata, params);\n            return self.sdk.util.streamSubtitleUrl(url);\n        },\n        async streamUrl(extUrl, metadata = {}, params = {}) {\n            params = Object.assign({}, this.params, params);\n            let url = await this.url(extUrl, metadata, params);\n            return self.sdk.util.streamUrl(url, metadata, params);\n        },\n        async mediaInfo(extUrl, metadata = {}, params = {}) {\n            const url = await this.url(extUrl, metadata, params);\n            return await self.sdk.util.mediaInfo(url);\n        },\n        async openSubtitles(extUrl, metadata = {}, params = {}) {\n            const url = await this.url(extUrl, metadata, params);\n            return await self.sdk.util.openSubtitles(url);\n        },\n    };\n};","import torrent from './sdk/torrent';\nimport magnet from './sdk/magnet';\nimport abuse from './sdk/abuse';\nimport seeder from './sdk/seeder';\nimport tracker from './sdk/tracker';\nimport loader from './sdk/loader';\nimport util from './sdk/util';\nimport ext from './sdk/ext';\nimport throttle from 'lodash/throttle';\n\nconst defaultParams = {\n    db: null,\n    grpcDebug: false,\n    retryInterval: 1000,\n    retryLimit: 3,\n    cache: false,\n    multibitrate: false,\n    vod: false,\n    pools: {\n        cache: [],\n        seeder: [],\n        transcoder: [],\n    },\n    subdomains: false,\n    async getToken() {\n        return null;\n    },\n    endpoints: {\n        torrent: '/store'\n    },\n    tokenRenewInterval: 60000,\n}\n\nfunction sdk(params = {}) {\n    params = Object.assign(defaultParams, params);\n    if (params.tokenUrl) {\n        params.getToken = async () => {\n            const res = await fetch(params.tokenUrl);\n            return res.text();\n        }\n    }\n    if (params.tokenRenewInterval) {\n        const t = params.getToken;\n        params.getToken = throttle(t, params.tokenRenewInterval, {\n            trailing: false,\n        });\n    }\n\n    let sdk = {};\n\n    sdk = Object.assign(sdk, {\n        params,\n        tracker: tracker(params, sdk),\n        seeder:  seeder(params, sdk),\n        ext:     ext(params, sdk),\n        magnet:  magnet(params, sdk),\n        torrent: torrent(params, sdk),\n        abuse:   abuse(params, sdk),\n        util:    util(params, sdk),\n        loader:  loader(params, sdk),\n    });\n    sdk.checkApi = (metadata = {}, params = {}) => {\n        return sdk.util.checkApi(metadata, params);\n    }\n    sdk.load = (source, metadata = {}, params = {}) => {\n        return sdk.loader.load(source, metadata, params);\n    };\n    sdk.loadById = (type, id, metadata = {}, params = {}) => {\n        return sdk.loader.loadById(type, id, metadata, params);\n    };\n\n    return sdk;\n\n};\n\nexport default function(params = {}) {\n    return sdk(params);\n}","// source: proto/torrent-store/torrent-store.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar proto = {};\n\ngoog.exportSymbol('CheckReply', null, proto);\ngoog.exportSymbol('CheckRequest', null, proto);\ngoog.exportSymbol('PullReply', null, proto);\ngoog.exportSymbol('PullRequest', null, proto);\ngoog.exportSymbol('PushReply', null, proto);\ngoog.exportSymbol('PushRequest', null, proto);\ngoog.exportSymbol('TouchReply', null, proto);\ngoog.exportSymbol('TouchRequest', null, proto);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PushReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PushReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PushReply.displayName = 'proto.PushReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PushRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PushRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PushRequest.displayName = 'proto.PushRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PullRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PullRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PullRequest.displayName = 'proto.PullRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.PullReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.PullReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.PullReply.displayName = 'proto.PullReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CheckRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CheckRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CheckRequest.displayName = 'proto.CheckRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CheckReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CheckReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.CheckReply.displayName = 'proto.CheckReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TouchReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TouchReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TouchReply.displayName = 'proto.TouchReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TouchRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TouchRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.TouchRequest.displayName = 'proto.TouchRequest';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PushReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.PushReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PushReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    infohash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PushReply}\n */\nproto.PushReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PushReply;\n  return proto.PushReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PushReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PushReply}\n */\nproto.PushReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PushReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PushReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PushReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string infoHash = 1;\n * @return {string}\n */\nproto.PushReply.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PushReply} returns this\n */\nproto.PushReply.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PushRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.PushRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PushRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    torrent: msg.getTorrent_asB64(),\n    expire: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PushRequest}\n */\nproto.PushRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PushRequest;\n  return proto.PushRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PushRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PushRequest}\n */\nproto.PushRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTorrent(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpire(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PushRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PushRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PushRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PushRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTorrent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExpire();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes torrent = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.PushRequest.prototype.getTorrent = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {string}\n */\nproto.PushRequest.prototype.getTorrent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTorrent()));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {!Uint8Array}\n */\nproto.PushRequest.prototype.getTorrent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTorrent()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setTorrent = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 expire = 2;\n * @return {number}\n */\nproto.PushRequest.prototype.getExpire = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.PushRequest} returns this\n */\nproto.PushRequest.prototype.setExpire = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PullRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.PullRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PullRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PullRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    infohash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PullRequest}\n */\nproto.PullRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PullRequest;\n  return proto.PullRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PullRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PullRequest}\n */\nproto.PullRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PullRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PullRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PullRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PullRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string infoHash = 1;\n * @return {string}\n */\nproto.PullRequest.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.PullRequest} returns this\n */\nproto.PullRequest.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.PullReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.PullReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.PullReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PullReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    torrent: msg.getTorrent_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.PullReply}\n */\nproto.PullReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.PullReply;\n  return proto.PullReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.PullReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.PullReply}\n */\nproto.PullReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTorrent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.PullReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.PullReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.PullReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.PullReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTorrent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes torrent = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.PullReply.prototype.getTorrent = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {string}\n */\nproto.PullReply.prototype.getTorrent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTorrent()));\n};\n\n\n/**\n * optional bytes torrent = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTorrent()`\n * @return {!Uint8Array}\n */\nproto.PullReply.prototype.getTorrent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTorrent()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.PullReply} returns this\n */\nproto.PullReply.prototype.setTorrent = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CheckRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.CheckRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CheckRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    infohash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CheckRequest}\n */\nproto.CheckRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CheckRequest;\n  return proto.CheckRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CheckRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CheckRequest}\n */\nproto.CheckRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CheckRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CheckRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CheckRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string infoHash = 1;\n * @return {string}\n */\nproto.CheckRequest.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.CheckRequest} returns this\n */\nproto.CheckRequest.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CheckReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.CheckReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CheckReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exists: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CheckReply}\n */\nproto.CheckReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CheckReply;\n  return proto.CheckReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CheckReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CheckReply}\n */\nproto.CheckReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setExists(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CheckReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CheckReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CheckReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CheckReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExists();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool exists = 1;\n * @return {boolean}\n */\nproto.CheckReply.prototype.getExists = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.CheckReply} returns this\n */\nproto.CheckReply.prototype.setExists = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TouchReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.TouchReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TouchReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TouchReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TouchReply}\n */\nproto.TouchReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TouchReply;\n  return proto.TouchReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TouchReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TouchReply}\n */\nproto.TouchReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TouchReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TouchReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TouchReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TouchReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TouchRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.TouchRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TouchRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TouchRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    infohash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    expire: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TouchRequest}\n */\nproto.TouchRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TouchRequest;\n  return proto.TouchRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TouchRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TouchRequest}\n */\nproto.TouchRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfohash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpire(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TouchRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TouchRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TouchRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TouchRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInfohash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getExpire();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string infoHash = 1;\n * @return {string}\n */\nproto.TouchRequest.prototype.getInfohash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.TouchRequest} returns this\n */\nproto.TouchRequest.prototype.setInfohash = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int32 expire = 2;\n * @return {number}\n */\nproto.TouchRequest.prototype.getExpire = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.TouchRequest} returns this\n */\nproto.TouchRequest.prototype.setExpire = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// package: \n// file: proto/abuse-store/abuse-store.proto\n\nvar proto_abuse_store_abuse_store_pb = require(\"../../proto/abuse-store/abuse-store_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar AbuseStore = (function () {\n  function AbuseStore() {}\n  AbuseStore.serviceName = \"AbuseStore\";\n  return AbuseStore;\n}());\n\nAbuseStore.Push = {\n  methodName: \"Push\",\n  service: AbuseStore,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_abuse_store_abuse_store_pb.PushRequest,\n  responseType: proto_abuse_store_abuse_store_pb.PushReply\n};\n\nAbuseStore.Check = {\n  methodName: \"Check\",\n  service: AbuseStore,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_abuse_store_abuse_store_pb.CheckRequest,\n  responseType: proto_abuse_store_abuse_store_pb.CheckReply\n};\n\nexports.AbuseStore = AbuseStore;\n\nfunction AbuseStoreClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nAbuseStoreClient.prototype.push = function push(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AbuseStore.Push, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nAbuseStoreClient.prototype.check = function check(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(AbuseStore.Check, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.AbuseStoreClient = AbuseStoreClient;\n\n","module.exports = require('./build/mediaelement-and-player.js');\n","// source: proto/torrent-web-seeder/torrent-web-seeder.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar proto = {};\n\ngoog.exportSymbol('File', null, proto);\ngoog.exportSymbol('FilesReply', null, proto);\ngoog.exportSymbol('FilesRequest', null, proto);\ngoog.exportSymbol('Piece', null, proto);\ngoog.exportSymbol('Piece.Priority', null, proto);\ngoog.exportSymbol('StatReply', null, proto);\ngoog.exportSymbol('StatReply.Status', null, proto);\ngoog.exportSymbol('StatRequest', null, proto);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StatRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.StatRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.StatRequest.displayName = 'proto.StatRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StatReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.StatReply.repeatedFields_, null);\n};\ngoog.inherits(proto.StatReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.StatReply.displayName = 'proto.StatReply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Piece = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Piece, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Piece.displayName = 'proto.Piece';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.FilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FilesRequest.displayName = 'proto.FilesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.File = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.File, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.File.displayName = 'proto.File';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.FilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.FilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.FilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.FilesReply.displayName = 'proto.FilesReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StatRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.StatRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StatRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    path: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StatRequest}\n */\nproto.StatRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StatRequest;\n  return proto.StatRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StatRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StatRequest}\n */\nproto.StatRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StatRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StatRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StatRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string path = 1;\n * @return {string}\n */\nproto.StatRequest.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.StatRequest} returns this\n */\nproto.StatRequest.prototype.setPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.StatReply.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StatReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.StatReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StatReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    total: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    completed: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    peers: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    status: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    piecesList: jspb.Message.toObjectList(msg.getPiecesList(),\n    proto.Piece.toObject, includeInstance),\n    seeders: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    leechers: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StatReply}\n */\nproto.StatReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StatReply;\n  return proto.StatReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StatReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StatReply}\n */\nproto.StatReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotal(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCompleted(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeers(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.StatReply.Status} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = new proto.Piece;\n      reader.readMessage(value,proto.Piece.deserializeBinaryFromReader);\n      msg.addPieces(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSeeders(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLeechers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StatReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StatReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StatReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StatReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getCompleted();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPeers();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getPiecesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.Piece.serializeBinaryToWriter\n    );\n  }\n  f = message.getSeeders();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getLeechers();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.StatReply.Status = {\n  INITIALIZATION: 0,\n  SEEDING: 1,\n  IDLE: 2,\n  TERMINATED: 3,\n  WAITING_FOR_PEERS: 4,\n  RESTORING: 5,\n  BACKINGUP: 6\n};\n\n/**\n * optional int64 total = 1;\n * @return {number}\n */\nproto.StatReply.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setTotal = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 completed = 2;\n * @return {number}\n */\nproto.StatReply.prototype.getCompleted = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setCompleted = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 peers = 3;\n * @return {number}\n */\nproto.StatReply.prototype.getPeers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setPeers = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional Status status = 4;\n * @return {!proto.StatReply.Status}\n */\nproto.StatReply.prototype.getStatus = function() {\n  return /** @type {!proto.StatReply.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.StatReply.Status} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n/**\n * repeated Piece pieces = 5;\n * @return {!Array<!proto.Piece>}\n */\nproto.StatReply.prototype.getPiecesList = function() {\n  return /** @type{!Array<!proto.Piece>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Piece, 5));\n};\n\n\n/**\n * @param {!Array<!proto.Piece>} value\n * @return {!proto.StatReply} returns this\n*/\nproto.StatReply.prototype.setPiecesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.Piece=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Piece}\n */\nproto.StatReply.prototype.addPieces = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Piece, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.clearPiecesList = function() {\n  return this.setPiecesList([]);\n};\n\n\n/**\n * optional int32 seeders = 6;\n * @return {number}\n */\nproto.StatReply.prototype.getSeeders = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setSeeders = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int32 leechers = 7;\n * @return {number}\n */\nproto.StatReply.prototype.getLeechers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.StatReply} returns this\n */\nproto.StatReply.prototype.setLeechers = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Piece.prototype.toObject = function(opt_includeInstance) {\n  return proto.Piece.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Piece} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Piece.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    position: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    complete: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    priority: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Piece}\n */\nproto.Piece.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Piece;\n  return proto.Piece.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Piece} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Piece}\n */\nproto.Piece.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPosition(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setComplete(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.Piece.Priority} */ (reader.readEnum());\n      msg.setPriority(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Piece.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Piece.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Piece} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Piece.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPosition();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getComplete();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getPriority();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.Piece.Priority = {\n  NONE: 0,\n  NORMAL: 1,\n  HIGH: 2,\n  READAHEAD: 3,\n  NEXT: 4,\n  NOW: 5\n};\n\n/**\n * optional int64 position = 1;\n * @return {number}\n */\nproto.Piece.prototype.getPosition = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Piece} returns this\n */\nproto.Piece.prototype.setPosition = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool complete = 2;\n * @return {boolean}\n */\nproto.Piece.prototype.getComplete = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Piece} returns this\n */\nproto.Piece.prototype.setComplete = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional Priority priority = 3;\n * @return {!proto.Piece.Priority}\n */\nproto.Piece.prototype.getPriority = function() {\n  return /** @type {!proto.Piece.Priority} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.Piece.Priority} value\n * @return {!proto.Piece} returns this\n */\nproto.Piece.prototype.setPriority = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.FilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FilesRequest}\n */\nproto.FilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FilesRequest;\n  return proto.FilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FilesRequest}\n */\nproto.FilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.File.prototype.toObject = function(opt_includeInstance) {\n  return proto.File.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.File} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.File.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    path: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.File}\n */\nproto.File.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.File;\n  return proto.File.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.File} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.File}\n */\nproto.File.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.File.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.File.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.File} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.File.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string path = 1;\n * @return {string}\n */\nproto.File.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.File} returns this\n */\nproto.File.prototype.setPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.FilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.FilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.FilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.FilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    filesList: jspb.Message.toObjectList(msg.getFilesList(),\n    proto.File.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.FilesReply}\n */\nproto.FilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.FilesReply;\n  return proto.FilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.FilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.FilesReply}\n */\nproto.FilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.File;\n      reader.readMessage(value,proto.File.deserializeBinaryFromReader);\n      msg.addFiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.FilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.FilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.FilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.FilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.File.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated File files = 1;\n * @return {!Array<!proto.File>}\n */\nproto.FilesReply.prototype.getFilesList = function() {\n  return /** @type{!Array<!proto.File>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.File, 1));\n};\n\n\n/**\n * @param {!Array<!proto.File>} value\n * @return {!proto.FilesReply} returns this\n*/\nproto.FilesReply.prototype.setFilesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.File=} opt_value\n * @param {number=} opt_index\n * @return {!proto.File}\n */\nproto.FilesReply.prototype.addFiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.File, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.FilesReply} returns this\n */\nproto.FilesReply.prototype.clearFilesList = function() {\n  return this.setFilesList([]);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"sourceRoot":""}